Metadata-Version: 1.1
Name: os.path2
Version: 0.0.4
Summary: The os.path module replacement, with simple API.
Home-page: https://github.com/xando/osome
Author: Sebastian Pawluś
Author-email: sebastian.pawlus@gmail.com
License: Copyright (c) 2013, Sebastian PawluÅ›.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met: 

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer. 
2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution. 

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

The views and conclusions contained in the software and documentation are those
of the authors and should not be interpreted as representing official policies, 
either expressed or implied, of the FreeBSD Project.
Description: ============================
        from os import path2 as path
        ============================
        
        The **os.path** library replacement with simple API.
        
        
        .. code-block:: python
        
            >>> from os import path2 as path
        
            >>> path('/var/log')
            /var/log
        
            >>> path('/var', 'log')
            /var/log
        
            >>> path('/home/you/file').user
            'you'
        
            >>> [(element.user, element.group, element.mod) for element in path('.')]
            [('user', 'user', '0664'),
             ('user', 'user', '0664'),
             ('user', 'user', '0664'),
             ('user', 'user', '0664'),
             ('user', 'user', '0664'),
             ('user', 'user', '0664'),
             ('user', 'user', '0664'),
             ('user', 'user', '0775'),
             ('user', 'user', '0664')]
        
        
        Status
        ------
        
        Library seems to be pretty stable. Feel free to use it as you want.
        But I think this no the final version of API.
        
        
        Install
        -------
        
        You can install it from PyPi, by simply **pip**:
        
        .. code-block:: bash
        
           $ pip install os.path2
        
        only if you don't have pip installed, an alternative method is **easy_install**:
        
        .. code-block:: bash
        
           $ easy_install os.path2
        
        to test it, launch **python**
        
        .. code-block:: python
        
           >>> from os import path2 as path
        
        
        Supported platforms
        -------------------
        
        * Python2.6
        * Python2.7
        * Python3.3
        * PyPy1.9
        
        
        Tests
        -----
        
        .. image:: https://api.travis-ci.org/xando/os.path2.png?branch=master
           :target: https://travis-ci.org/xando/os.path2
        
        
        .. code-block:: bash
        
           >>> python setup.py test
        
        
Keywords: os path
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: Implementation :: PyPy
